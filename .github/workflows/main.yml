name: BlackRock BTC Tracker

on:
  schedule:
    - cron: '0 * * * *'  # Se ejecuta al inicio de cada hora, todos los d√≠as
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Get current date for cache key
      id: date
      run: echo "date=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: Restore last date from cache
      id: cache-last-date
      uses: actions/cache/restore@v3
      with:
        path: last_value.txt
        key: last-btc-date-${{ github.run_id }}
        restore-keys: |
          last-btc-date-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run script
      env:
        TWITTER_API_KEY: fAtUAee6ERA07Yi4thoRKRmle
        TWITTER_API_SECRET: X96zLhhEoH5a5dilOOqAk1TjWBwB14qGNBiRz49jwJThNv2oTp
        TWITTER_ACCESS_TOKEN: AIJuV5SaMZKytQB2g2blXciBuS3E4T
        TWITTER_ACCESS_TOKEN_SECRET: HuwKuloMtNujiOpZjue76kvZkYUdp9CSyiBKiW77cIKbs
      run: |
        # Mostrar estado inicial del directorio
        echo "üìÇ Contenido del directorio antes de ejecutar el script:"
        ls -la
        
        # Verificar si el archivo de cach√© existe
        if [ -f last_value.txt ]; then
          echo "‚úÖ Valor anterior encontrado en cach√©"
          echo "üìÑ Contenido de last_value.txt: $(cat last_value.txt)"
        else
          echo "‚ÑπÔ∏è No se encontr√≥ valor anterior, ser√° la primera ejecuci√≥n"
        fi
        
        # Ejecutar el script
        echo "üöÄ Ejecutando script..."
        python main.py
        
        # Verificar el archivo despu√©s de la ejecuci√≥n
        echo "\nüìÇ Contenido del directorio despu√©s de ejecutar el script:"
        ls -la
        
        if [ -f last_value.txt ]; then
          current_value=$(cat last_value.txt)
          echo "‚úÖ Valor actual en last_value.txt: $current_value"
          
          # Guardar en cach√© para la pr√≥xima ejecuci√≥n
          echo "üìù Guardando en cach√© para la pr√≥xima ejecuci√≥n..."
          echo "::set-output name=cache-hit::true"
          
          # Crear un archivo de cach√© con la fecha actual
          echo "$current_value" > last_value.txt.cache
          
          echo "‚úÖ Valor guardado en cach√©: $current_value"
        else
          echo "‚ùå ERROR: No se encontr√≥ last_value.txt despu√©s de ejecutar el script"
          exit 1
        fi
        
    - name: Save to cache
      uses: actions/cache/save@v3
      if: steps.cache-last-date.outputs.cache-hit == 'true'
      with:
        path: last_value.txt.cache
        key: last-btc-date-${{ github.run_id }}
        restore-keys: |
          last-btc-date-
